<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dandelion.dao.self.AdminSelfMapper">
    <resultMap id="AuthorityMap" type="com.dandelion.bean.Authority">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Aug 21 10:12:29 CST 2019.
        -->
        <id column="authority_id" jdbcType="INTEGER" property="authorityId" />
        <result column="authority_name" jdbcType="VARCHAR" property="authorityName" />
        <result column="authority_url" jdbcType="VARCHAR" property="authorityUrl" />
        <result column="authority_icon" jdbcType="VARCHAR" property="authorityIcon" />
        <result column="authority_identifier" jdbcType="INTEGER" property="authorityIdentifier" />
        <result column="authority_level" jdbcType="INTEGER" property="authorityLevel" />
        <result column="parent_authority_id" jdbcType="INTEGER" property="parentAuthorityId" />
        <result column="authority_status" jdbcType="INTEGER" property="authorityStatus" />
        <result column="authority_type" jdbcType="INTEGER" property="authorityType" />
        <result column="create_id" jdbcType="INTEGER" property="createId" />
        <result column="create_name" jdbcType="VARCHAR" property="createName" />
        <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    </resultMap>
    <resultMap id="RoleMap" type="com.dandelion.bean.Role">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Aug 21 10:12:29 CST 2019.
        -->
        <id column="role_id" jdbcType="INTEGER" property="roleId" />
        <result column="role_name" jdbcType="VARCHAR" property="roleName" />
        <result column="role_status" jdbcType="INTEGER" property="roleStatus" />
        <result column="role_describe" jdbcType="VARCHAR" property="roleDescribe" />
        <result column="parent_role_id" jdbcType="INTEGER" property="parentRoleId" />
        <result column="create_id" jdbcType="INTEGER" property="createId" />
        <result column="create_name" jdbcType="VARCHAR" property="createName" />
        <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    </resultMap>

    <select id="selectAuthorityByAdminId" parameterType="java.util.Map" resultMap="AuthorityMap">
        SELECT
          DISTINCT au.*
        FROM authority au
        LEFT JOIN role_authority ra ON au.authority_id = ra.authority_id
        LEFT JOIN admin_role ar ON ra.role_id = ar.role_id
        <where>
            <if test="adminId != null and adminId != ''">
                AND ar.admin_id = #{adminId}
            </if>
            <if test="authorityType != null and authorityType != ''">
                AND au.authority_type = #{authorityType}
            </if>
        </where>
        ORDER BY au.authority_level ASC,au.authority_id ASC
    </select>

    <select id="selectRoleByAdminId" parameterType="java.util.Map" resultMap="RoleMap">
        SELECT
          DISTINCT au.*
        FROM role au
        LEFT JOIN admin_role ar ON au.role_id = ar.role_id
        <where>
            <if test="adminId != null and adminId != ''">
                AND ar.admin_id = #{adminId}
            </if>
        </where>
        order by au.parent_role_id,au.role_id ASC
    </select>

    <select id="selectRoleIdByAdminId" parameterType="java.util.Map" resultType="java.lang.Integer">
        SELECT
        DISTINCT ar.role_id as roleId
        FROM admin_role ar
        WHERE ar.admin_id = #{adminId}
    </select>

    <delete id="deleteRoleByAdminId" parameterType="java.lang.Integer">
        DELETE FROM admin_role WHERE admin_id = #{adminId}
    </delete>

    <insert id="insertRoleByAdminId" parameterType="java.util.Map">
        INSERT INTO admin_role(admin_id, role_id)
        VALUES
        <foreach collection="roleIdList" separator="," item="item" >
            (
            #{adminId},
            #{item}
            )
        </foreach>
    </insert>
</mapper>