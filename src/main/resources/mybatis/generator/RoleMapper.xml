<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dandelion.dao.generator.RoleMapper">
  <resultMap id="BaseResultMap" type="com.dandelion.bean.Role">
    <id column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_status" jdbcType="INTEGER" property="roleStatus" />
    <result column="role_describe" jdbcType="VARCHAR" property="roleDescribe" />
    <result column="parent_role_id" jdbcType="INTEGER" property="parentRoleId" />
    <result column="create_id" jdbcType="INTEGER" property="createId" />
    <result column="create_name" jdbcType="VARCHAR" property="createName" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    role_id, role_name, role_status, role_describe, parent_role_id, create_id, create_name, 
    create_time
  </sql>
  <select id="selectByExample" parameterType="com.dandelion.bean.example.RoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role
    where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dandelion.bean.example.RoleExample">
    delete from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dandelion.bean.Role">
    insert into role (role_id, role_name, role_status, 
      role_describe, parent_role_id, create_id, 
      create_name, create_time)
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleStatus,jdbcType=INTEGER}, 
      #{roleDescribe,jdbcType=VARCHAR}, #{parentRoleId,jdbcType=INTEGER}, #{createId,jdbcType=INTEGER}, 
      #{createName,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dandelion.bean.Role">
    insert into role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleStatus != null">
        role_status,
      </if>
      <if test="roleDescribe != null">
        role_describe,
      </if>
      <if test="parentRoleId != null">
        parent_role_id,
      </if>
      <if test="createId != null">
        create_id,
      </if>
      <if test="createName != null">
        create_name,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleStatus != null">
        #{roleStatus,jdbcType=INTEGER},
      </if>
      <if test="roleDescribe != null">
        #{roleDescribe,jdbcType=VARCHAR},
      </if>
      <if test="parentRoleId != null">
        #{parentRoleId,jdbcType=INTEGER},
      </if>
      <if test="createId != null">
        #{createId,jdbcType=INTEGER},
      </if>
      <if test="createName != null">
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dandelion.bean.example.RoleExample" resultType="java.lang.Long">
    select count(*) from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update role
    <set>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.roleName != null">
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleStatus != null">
        role_status = #{record.roleStatus,jdbcType=INTEGER},
      </if>
      <if test="record.roleDescribe != null">
        role_describe = #{record.roleDescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.parentRoleId != null">
        parent_role_id = #{record.parentRoleId,jdbcType=INTEGER},
      </if>
      <if test="record.createId != null">
        create_id = #{record.createId,jdbcType=INTEGER},
      </if>
      <if test="record.createName != null">
        create_name = #{record.createName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update role
    set role_id = #{record.roleId,jdbcType=INTEGER},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      role_status = #{record.roleStatus,jdbcType=INTEGER},
      role_describe = #{record.roleDescribe,jdbcType=VARCHAR},
      parent_role_id = #{record.parentRoleId,jdbcType=INTEGER},
      create_id = #{record.createId,jdbcType=INTEGER},
      create_name = #{record.createName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dandelion.bean.Role">
    update role
    <set>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleStatus != null">
        role_status = #{roleStatus,jdbcType=INTEGER},
      </if>
      <if test="roleDescribe != null">
        role_describe = #{roleDescribe,jdbcType=VARCHAR},
      </if>
      <if test="parentRoleId != null">
        parent_role_id = #{parentRoleId,jdbcType=INTEGER},
      </if>
      <if test="createId != null">
        create_id = #{createId,jdbcType=INTEGER},
      </if>
      <if test="createName != null">
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dandelion.bean.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_status = #{roleStatus,jdbcType=INTEGER},
      role_describe = #{roleDescribe,jdbcType=VARCHAR},
      parent_role_id = #{parentRoleId,jdbcType=INTEGER},
      create_id = #{createId,jdbcType=INTEGER},
      create_name = #{createName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR}
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.dandelion.bean.example.RoleExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      这个节点为代码生成工具生成，请不要修改!
      @author generator
    -->
    select
    <include refid="Base_Column_List" />
    from role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      这个节点为代码生成工具生成，请不要修改!
      @author generator
    -->
    insert into role (role_id, role_name, role_status, role_describe, parent_role_id, create_id, create_name, create_time)
    values
    <foreach collection="list" item="item" separator=",">
       (#{item.roleId,jdbcType=INTEGER}, #{item.roleName,jdbcType=VARCHAR}, #{item.roleStatus,jdbcType=INTEGER}, #{item.roleDescribe,jdbcType=VARCHAR}, #{item.parentRoleId,jdbcType=INTEGER}, #{item.createId,jdbcType=INTEGER}, #{item.createName,jdbcType=VARCHAR}, #{item.createTime,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      这个节点为代码生成工具生成，请不要修改!
      @author generator
    -->
    insert into role (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'role_id' == column.value">
          #{item.roleId,jdbcType=INTEGER}
        </if>
        <if test="'role_name' == column.value">
          #{item.roleName,jdbcType=VARCHAR}
        </if>
        <if test="'role_status' == column.value">
          #{item.roleStatus,jdbcType=INTEGER}
        </if>
        <if test="'role_describe' == column.value">
          #{item.roleDescribe,jdbcType=VARCHAR}
        </if>
        <if test="'parent_role_id' == column.value">
          #{item.parentRoleId,jdbcType=INTEGER}
        </if>
        <if test="'create_id' == column.value">
          #{item.createId,jdbcType=INTEGER}
        </if>
        <if test="'create_name' == column.value">
          #{item.createName,jdbcType=VARCHAR}
        </if>
        <if test="'create_time' == column.value">
          #{item.createTime,jdbcType=VARCHAR}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>